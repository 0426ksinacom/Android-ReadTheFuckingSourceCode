配置账号信息
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

创建SSH key
$ ssh-keygen -t rsa -C "email@example.com"

此时会生成id_rsa和id_rsa.pub两个文件，登录网站设置点击Add SSH Key在key文本里粘贴id_rsa.pub文件的内容

关联远程仓库
$ git remote add origin git@github.com:xxx/xxx.git
推送
$ git push -u origin master


创建本地仓库

第一步创建文件夹
$ mkdir <name>
$ cd <name>
$ pwd
<path>/<name>

第二步初始化本地仓库
$ git init
Initialized empty Git repository in <path>/<name>/.git/


提交文件
$ git add <name>
$ git commit -m "描述信息"

查看本地仓库状态
$ git status

查看文件修改内容
$ git diff <name>

查看版本库操作记录
$ git log (--pretty=oneline 该参数可以简化输出信息)
查看版本库所有操作记录
$ git reflog

回退到指定版本
$ git reset --hard HEAD^ (HEAD^是commit id，例如：3628164...882e1e0)

查看文件内容
$ cat <name>

恢复文件修改
$ git checkout -- <name>

删除文件
$ git rm <name>
$ git commit -m "描述信息"

克隆远程仓库
$ git clone git@github.com:xxx/xxx.git

切换分支
$ git checkout -b(表示创建并切换) <name>
相当于
$ git branch <name>//创建分支
$ git checkout <name>//切换到分支

查看当前分支
$ git branch

合并分支
$ git merge <name>//将分支合并到当前分支

删除分支
$ git branch -d <name>
$ git branch -D <name>//强行删除

查看分支合并情况
$ git log --graph --pretty=oneline --abbrev-commit
查看分支合并图
$ git log --graph

查看工作区
$ git stash save <desc>
查看工作区列表
$ git stash list
取出工作区内容
$ git stash apply <name>//取出不删除
$ git stash drop <name>//删除
$ git stash pop <name>//取出并删除

查看远程仓库(默认origin为远程仓库)信息
$ git remote -v(显示详细信息)

推送分支
$ git push origin(远程仓库) master(本地master分支)//将本地master分支上的内容推送到远程仓库

创建远程origin的分支到本地
$ git checkout -b <name> origin/<name>

设置本地分支与远程origin分支链接
$ git branch --set-upstream <name> origin/<name>

拉取内容
$ git pull

创建标签
$ git tag <name>
$ git tag <name> <commit id>//创建指定提交后的标签
$ git tag -a <name> -m <desc> <commit id>//创建带描述的标签
查看所有标签
$ git tag
查看标签信息
$ git show <name>
删除标签
$ git tag -d <name>
推送标签
$ git push origin <name>
$ git push origin --tags//批量推送
删除远程标签
$ git tag -d <name>//先删除本地
$ git push origin :refs/tags/<name>//推送

